kind: pipeline
name: default

workspace:
  base: /go
  path: filestash

clone:
  depth: 1

steps:

- name: build_prepare
  image: alpine:latest
  depends_on: [ clone ]
  commands:
  - mkdir -p ./dist/data/state/
  - cp -R config ./dist/data/state/
  - mkdir -p ./filestash/data/state/
  - cp -R config ./filestash/data/state/

- name: build_frontend
  image: node:12-alpine
  depends_on: [ build_prepare ]
  commands:
  - apk add make git > /dev/null
  - npm install --silent
  - make build_frontend
  - cp -R ./dist/data/public ./filestash/data/public

- name: build_backend
  image: golang:1.12-stretch
  depends_on: [ build_prepare ]
  environment:
    CGO_LDFLAGS_ALLOW: "-fopenmp"
    GO111MODULE: "on"
  commands:
  - apt-get update > /dev/null && apt-get install -y libglib2.0-dev curl make > /dev/null
  - make build_init
  - make build_backend
  - timeout 1 ./dist/filestash || true
  - cp dist/filestash filestash/
  - chmod -R o+r+w+x ./dist/data

- name: release_publish
  image: appleboy/drone-scp
  depends_on: [ build_backend, build_frontend ]
  when:
    branch: master
  settings:
    command_timeout: 30m
    host: nepmia.design
    user:
      from_secret: SSH_USERNAME
    password:
      from_secret: SSH_PASSWORD
    source: filestash_Linux-x86_64.tar.gpg
    target: /var/www/designaui

- name: release_deploy
  image: appleboy/drone-ssh
  depends_on: [ release_publish ]
  when:
    branch: master
  settings:
    command_timeout: 10m
    host: nepmia.design
    user:
      from_secret: SSH_USERNAME
    password:
      from_secret: SSH_PASSWORD
    port: 22
    script:
    - cd /var/www/designaui
    - docker-compose pull
    - docker-compose up -d --force-recreate --build
    - docker image prune -f
